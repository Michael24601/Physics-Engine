/*
	Header file for a contact, two objects in collision. All contacts are
	resolved by first removing any interpenetration (same as particles),
	and then by creating the necessary forces for a rebound effect.
	This class is also used to generate position joints, that keep objects
	a set distance apart, or close, or inhibits their rotation.
	There are several types of contacts, each generating different forces.
	These are point to face contact, edge to edge contact, edge to face
	contact, and face to face contact.
	In the point to face case, we ususally project the interpenetrating
	point onto the face, and then calculate the distance between them to
	get the interpenetration. The normal is the face's normal. (perpendicular
	vector). The contact point can be the point itself or a halfway
	point between the two.
	For an edge to edge contact, the normal is at right angles with the
	tangent of both edges (calculated using a vector product). The contact
	point is either the closed point on one edge to another, or the midway
	point between the two (the second is more accurate but also slower).
	For edge face contacts, we can get away with using another type of
	contact, except in the case of a curved surface. In that case, the normal
	can again be the normal of the face (ignoring the normal of the edge),
	Then depenging on the geometry, we can calculate the point of deepest
	penetration, and the depth as the length along the normal passing through
	the contact point, unless the depth was already calculated in trying to
	find said point.
	Again, for face to face contacts, we can use a different type of contact
	to generate it, unless of course the surface of either face is curved.
	In that case, The contact normals of both faces at the contact point are
	usually opposites, so we pick one and work on it. However, note that they
	can't be swapped in later frames when dealing with the collision, and the
	use of one over the othef should remain consistent. Then depenging on the
	geometry, we can calculate the point of deepest penetration, and the depth
	as the length along the normal passing through the contact point, unless
	the depth was already calculated in trying to find said point.
*/

#ifndef CONTACT_H
#define CONTACT_H

#include "vector3D.h"

namespace pe {

	class Contact {

	public:

		/*
			The two bodies in contact. The second can be null if the contact
			is with a piece of scenery.
		*/
		RigidBody* body[2];

		// Firction generated by contact
		real friction;

		// Restitution (bounciness) of contact
		real restitution;
		
		// Position of the contact point in world coordinates
		Vector3D contactPoint;
		
		// Direction of the contact, also in world coordinates
		Vector3D contactNormal;
		
		/*
			Holds the depth of the interpenetration of the two bodies. In
			that case, the contactPoint maybe be the coordinate of the
			halfway point between the two interpenetrating points.
		*/
		real penetration;
	};
}

#endif

\documentclass{ article }


% For 3D plots
\usepackage{ blindtext }
\usepackage{ pgfplots }
\pgfplotsset{ compat = 1.9 }
% For inline color changes
\usepackage{ xcolor }
% For vertical brace rcases
\usepackage{ mathtools }
% For positioning figures
\usepackage{ float }
% makes figure font bold
\usepackage{ caption }
\captionsetup[figure]{ labelfont = bf }
% For text generation
\usepackage{ lipsum }
% For drawing
\usepackage{ tikz }
% For manipulating coordinates
\usetikzlibrary{ calc }
% For relative node positioning
\usetikzlibrary{ positioning }
% For smaller or equal sign and not divide sign
\usepackage{ amssymb }
% For the diagonal fraction
\usepackage{ xfrac }
% For enumerating exercise parts with letters instead of numbers
\usepackage{ enumitem }
% For dfrac, which forces the fraction to be in display mode(large) e
% even in math mode(small)
\usepackage{ amsmath }
% For degree sign
\usepackage{ gensymb }
% For "\mathbb" macro
\usepackage{ amsfonts }
\newcommand{ \N }{\mathbb{ N }}
\newcommand{ \Z }{\mathbb{ Z }}
\newcommand{ \Q }{\mathbb{ Q }}
\newcommand{ \R }{\mathbb{ R }}
\newcommand{ \C }{\mathbb{ C }}
\newcommand{ \F }{\mathbb{ F }}
\newcommand{ \rad }{\text{ rad }}
\newcommand{ \lcm }{\text{ lcm }}
\newcommand{ \Aut }{\text{ Aut }}
\newcommand{ \seq }{\leqslant}
\newcommand{ \beq }{\geqslant}
\newcommand{ \sub }{\subseteq}
\newcommand{ \prosub }{\subset}

\newcommand{ \Ocal }{\mathcal{ O }}
\newcommand{ \Ccal }{\mathcal{ C }}
\newcommand{ \Pcal }{\mathcal{ P }}
\newcommand{ \Scal }{\mathcal{ S }}

% overline short italic
\newcommand{ \olsi }[1]{ \,\overline{\!{#1}} }

\title{ %
	\Huge Discrete Mathematics and its Applications \\
	\large by \\
	\Large Kenneth H.Rosen \\~\\
	\huge Chapter 1: The Foundations \\
	\LARGE Section 1: Propositional Logic \\
}
\date{ 2023 - 09 - 24 }
\author{ Michael Saba }

\begin{ document }
\pagenumbering{ gobble }
\maketitle
\newpage
\pagenumbering{ arabic }


\section* { Exercise 1 }
This is the first Exercise.Back to TEX!!!

\end{ document }
